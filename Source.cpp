
#include "list.h"
#include <iostream>
// 1. возможность подключать как библиотеку
// храним int
// 2. уметь создавать список
// функции:
// 3. добавлять элементы в список
// 3.1. в начало // push_front
// 3.2. в конец // push_back
// 3.3. в произвольное место (по индексу, нумерация с нуля) // insert
// 3.10. "вставить после" (принимает Node)
// 3.11. "вставить перед" (принимает Node)

// 4. удалять элементы из списка
// 4.1. по значению // remove
// 4.2. по позиции // erase
// 4.3. из начала // pop_front
// 4.4. из конца // pop_back
// 4.10. "удалить после" (принимает Node)
// 4.11. "удалить перед" (принимает Node)

// обработка ошибок не нужна

// 5. количество эл-в в списке // size
// 5.1. bool -> пустой ли список bool empty()

// 6. возможность удалять весь список: освобождается вся память, занятая этим списком // destroy

// 7. поиск: в какой позиции находится нужный элемент -> возвр. позицию 0..size-1 // find
// 7.1. если не находит: -1 или size

// доп задание: функция сортировки связного списка
int main() {
    List list1;
    List list2;
    list1.push_back(1);
    list1.push_back(2);
    list1.push_back(4);
    list1.push_back(5);
    list1.push_in(2, 3);
    list1.remove(1);
    list1.remove(2);
    Node* testnode = list1.head->right;
    list1.remove_afore(list1.tail);
    list1.print();
    list1.destroy();
}
